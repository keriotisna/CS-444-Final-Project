Found model to train!
Current allocation for VRAM is 1586.278 MB
Found model:
{'trainTransformID': 'hardAugmentation2_6', 'valTestTransformID': 'NONE', 'epochs': 200, 'warmupEpochs': 5, 'batch_size': 256, 'lr': 0.05, 'momentum': 0.9, 'weight_decay': 0.01, 'nesterov': True, 'plateuPatience': 3, 'plateuFactor': 0.5, 'modelName': 'baseline108MN_hardAugmentation2-6'}
 Required memory: 1586.278 MB
Currently, there are 1 models in training
45849 Namespace(modelName='baseline108MN_hardAugmentation2-6', trainTransformID='hardAugmentation2_6', valTestTransformID='NONE', epochs=200, warmupEpochs=5, batch_size=256, lr=0.05, momentum=0.9, weight_decay=0.01, nesterov=True, plateuPatience=3, plateuFactor=0.5, saveResults=0, customNormalization=None)
Got model: baseline108MN
@@@@@@@@@@@@@@@ WARNING!!!!! SAVE_RESULTS IS FALSE! NO MODEL STATISTICS WILL BE SAVED!!!!
Using device: cuda
Test passed!
45849 Normalizing...
tensor([0.4564, 0.4488, 0.4285])
tensor([0.1949, 0.1918, 0.1867])
45849 Done normalizing!
45849 normalizedTrainTransform: Compose(
      RandomPerspective(p=0.5, distortion_scale=0.4, interpolation=InterpolationMode.BILINEAR, fill=0)
      RandomGrayscale(p=0.1)
      RandomHorizontalFlip(p=0.5)
      RandomVerticalFlip(p=0.3)
      RandomInvert(p=0.2)
      RandomResizedCrop(size=(32, 32), scale=(0.3, 1), ratio=(0.75, 1.3333333333333333), interpolation=InterpolationMode.BILINEAR, antialias=True)
      ColorJitter(brightness=(0.6, 1.4), contrast=(0.5, 1.5), saturation=(0.6, 1.4))
      Normalize(mean=[tensor(0.4564), tensor(0.4488), tensor(0.4285)], std=[tensor(0.1949), tensor(0.1918), tensor(0.1867)], inplace=False)
)
45849 normalizedValTestTransform: Compose(
      Identity()
      Normalize(mean=[tensor(0.4564), tensor(0.4488), tensor(0.4285)], std=[tensor(0.1949), tensor(0.1918), tensor(0.1867)], inplace=False)
)
45849 Starting training...

45849 lr: 0.000000, trainLoss: 2.3717, trainAccuracy: 0.1000, validationLoss: 2.3681, validationAccuracy: 0.0972:   0%|          | 0/200 [01:30<?, ?it/s]
  0%|          | 0/200 [00:00<?, ?it/s]
Found model to train!
Current allocation for VRAM is 2433.968 MB
Found model:
{'trainTransformID': 'hardAugmentation2_6', 'valTestTransformID': 'NONE', 'epochs': 200, 'warmupEpochs': 5, 'batch_size': 256, 'lr': 0.05, 'momentum': 0.9, 'weight_decay': 0.01, 'nesterov': True, 'plateuPatience': 3, 'plateuFactor': 0.5, 'modelName': 'baseline36MN_hardAugmentation2-6'}
 Required memory: 847.69 MB
Currently, there are 2 models in training
24744 Namespace(modelName='baseline36MN_hardAugmentation2-6', trainTransformID='hardAugmentation2_6', valTestTransformID='NONE', epochs=200, warmupEpochs=5, batch_size=256, lr=0.05, momentum=0.9, weight_decay=0.01, nesterov=True, plateuPatience=3, plateuFactor=0.5, saveResults=0, customNormalization=None)
Got model: baseline36MN
@@@@@@@@@@@@@@@ WARNING!!!!! SAVE_RESULTS IS FALSE! NO MODEL STATISTICS WILL BE SAVED!!!!
Using device: cuda
Test passed!
24744 Normalizing...
45849 lr: 0.010000, trainLoss: 2.2508, trainAccuracy: 0.1454, validationLoss: 2.0985, validationAccuracy: 0.1927:   0%|          | 1/200 [02:55<5:00:12, 90.51s/it]
lr: 0.000000, trainLoss: 2.3717, trainAccuracy: 0.1000, validationLoss: 2.3681, validationAccuracy: 0.0972:   0%|          | 1/200 [01:30<5:00:12, 90.51s/it]
tensor([0.4622, 0.4603, 0.4422])
tensor([0.1975, 0.1955, 0.1924])
24744 Done normalizing!
      RandomPerspective(p=0.5, distortion_scale=0.4, interpolation=InterpolationMode.BILINEAR, fill=0)
24744 normalizedTrainTransform: Compose(
      RandomGrayscale(p=0.1)
      RandomHorizontalFlip(p=0.5)
      RandomVerticalFlip(p=0.3)
      RandomInvert(p=0.2)
      RandomResizedCrop(size=(32, 32), scale=(0.3, 1), ratio=(0.75, 1.3333333333333333), interpolation=InterpolationMode.BILINEAR, antialias=True)
      ColorJitter(brightness=(0.6, 1.4), contrast=(0.5, 1.5), saturation=(0.6, 1.4))
      Normalize(mean=[tensor(0.4622), tensor(0.4603), tensor(0.4422)], std=[tensor(0.1975), tensor(0.1955), tensor(0.1924)], inplace=False)
)
24744 normalizedValTestTransform: Compose(
      Identity()
      Normalize(mean=[tensor(0.4622), tensor(0.4603), tensor(0.4422)], std=[tensor(0.1975), tensor(0.1955), tensor(0.1924)], inplace=False)
)
24744 Starting training...

45849 lr: 0.020000, trainLoss: 2.1831, trainAccuracy: 0.1720, validationLoss: 2.0339, validationAccuracy: 0.2376:   1%|1         | 2/200 [04:23<4:47:28, 87.11s/it]
lr: 0.010000, trainLoss: 2.2508, trainAccuracy: 0.1454, validationLoss: 2.0985, validationAccuracy: 0.1927:   1%|1         | 2/200 [02:55<4:47:28, 87.11s/it]
lr: 0.020000, trainLoss: 2.1831, trainAccuracy: 0.1720, validationLoss: 2.0339, validationAccuracy: 0.2376:   2%|1         | 3/200 [04:23<4:48:03, 87.73s/it]Traceback (most recent call last):
  File "<string>", line 1, in <module>
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\multiprocessing\spawn.py", line 116, in spawn_main
  0%|          | 0/200 [00:00<?, ?it/s]
  0%|          | 0/200 [01:25<?, ?it/s]
Traceback (most recent call last):
  File "C:\Users\Nicholas\Documents\Desktop\SCHOOL\GRADUATE Offline\CS 444\Final Project\CS-444-Final-Project\trainModel.py", line 181, in <module>
    main()
  File "C:\Users\Nicholas\Documents\Desktop\SCHOOL\GRADUATE Offline\CS 444\Final Project\CS-444-Final-Project\trainModel.py", line 176, in main
    trainCompleteModel()
  File "C:\Users\Nicholas\Documents\Desktop\SCHOOL\GRADUATE Offline\CS 444\Final Project\CS-444-Final-Project\trainModel.py", line 159, in trainCompleteModel
    exitcode = _main(fd, parent_sentinel)
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\multiprocessing\spawn.py", line 125, in _main
    trainableModel.train(PID=PID, SAVE_RESULTS=SAVE_RESULTS)
  File "C:\Users\Nicholas\Documents\Desktop\SCHOOL\GRADUATE Offline\CS 444\Final Project\CS-444-Final-Project\trainableModel.py", line 313, in train
    prepare(preparation_data)
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\multiprocessing\spawn.py", line 236, in prepare
    _fixup_main_from_path(data['init_main_from_path'])
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\multiprocessing\spawn.py", line 287, in _fixup_main_from_path
    main_content = runpy.run_path(main_path,
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\runpy.py", line 289, in run_path
    return _run_module_code(code, init_globals, run_name,
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\runpy.py", line 96, in _run_module_code
    _run_code(code, mod_globals, init_globals,
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "C:\Users\Nicholas\Documents\Desktop\SCHOOL\GRADUATE Offline\CS 444\Final Project\CS-444-Final-Project\trainModel.py", line 2, in <module>
    from blocks import *
  File "C:\Users\Nicholas\Documents\Desktop\SCHOOL\GRADUATE Offline\CS 444\Final Project\CS-444-Final-Project\blocks.py", line 1, in <module>
    from torch import nn
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\site-packages\torch\__init__.py", line 1750, in <module>
    from . import _meta_registrations
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\site-packages\torch\_meta_registrations.py", line 8, in <module>
    from torch._decomp import (
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\site-packages\torch\_decomp\__init__.py", line 190, in <module>
    import torch._decomp.decompositions
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\site-packages\torch\_decomp\decompositions.py", line 10, in <module>
    import torch._prims as prims
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\site-packages\torch\_prims\__init__.py", line 2968, in <module>
    trainLoss, trainAccuracy = self.trainEpoch(dataloader=trainLoader, optimizer=optimizer, transform=self.trainingParameters.trainTransform)
  File "C:\Users\Nicholas\Documents\Desktop\SCHOOL\GRADUATE Offline\CS 444\Final Project\CS-444-Final-Project\trainableModel.py", line 223, in trainEpoch
    register_debug_prims()
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\site-packages\torch\_prims\debug_prims.py", line 41, in register_debug_prims
    correct += (forwardPass.argmax(dim=1) == y).float().mean().item()
KeyboardInterrupt
    def load_tensor_factory(name, size, stride, dtype, device):
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\site-packages\torch\_custom_op\impl.py", line 330, in inner
    self._register_impl("factory", f)
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\site-packages\torch\_custom_op\impl.py", line 221, in _register_impl
    frame = inspect.getframeinfo(sys._getframe(stacklevel))
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\inspect.py", line 1624, in getframeinfo
    lines, lnum = findsource(frame)
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\inspect.py", line 952, in findsource
    module = getmodule(object, file)
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\inspect.py", line 878, in getmodule
    os.path.realpath(f)] = module.__name__
  File "C:\Users\Nicholas\anaconda3\envs\CS444Env\lib\ntpath.py", line 689, in realpath
    path = _getfinalpathname(path)
KeyboardInterrupt
^C